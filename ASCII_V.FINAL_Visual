package ascii;

import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zerhin
 */
public class visualchido extends javax.swing.JFrame {

    /**
     * Creates new form visualchido
     */
    public visualchido() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        campo = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        txtid = new javax.swing.JTextField();
        mi4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        mi2 = new javax.swing.JMenuItem();
        mi3 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        me1 = new javax.swing.JMenuItem();
        me2 = new javax.swing.JMenuItem();
        me3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ASCII");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTabbedPane1.setToolTipText("visualizacion");
        jTabbedPane1.setName("visualizacion"); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jScrollPane1.setViewportView(jLabel1);

        jTabbedPane1.addTab("Imagen", jScrollPane1);

        jPanel2.setOpaque(false);

        campo.setEditable(false);
        campo.setColumns(20);
        campo.setRows(5);
        jScrollPane3.setViewportView(campo);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("ASCII", jPanel2);

        jLabel2.setText("Nombre");

        jLabel3.setText("ID");

        mi4.setText("Guardar en la base de datos");
        mi4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addGap(66, 66, 66)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mi4)
                .addGap(69, 69, 69))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(mi4)))
                .addGap(206, 206, 206))
        );

        jTabbedPane1.addTab("Base de datos", jPanel1);

        menu.setText("File");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        mi2.setText("Abrir");
        mi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi2ActionPerformed(evt);
            }
        });
        menu.add(mi2);

        mi3.setText("Guardar");
        mi3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi3ActionPerformed(evt);
            }
        });
        menu.add(mi3);

        jMenuBar1.add(menu);

        jMenu1.setText("Opciones ASCII");

        me1.setText("Zoom in");
        me1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                me1ActionPerformed(evt);
            }
        });
        jMenu1.add(me1);

        me2.setText("Zoom out");
        me2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                me2ActionPerformed(evt);
            }
        });
        jMenu1.add(me2);

        me3.setText("Restaurar");
        me3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                me3ActionPerformed(evt);
            }
        });
        jMenu1.add(me3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("visualizacion");

        pack();
    }// </editor-fold>                        

    private void mi2ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
         if(evt.getSource()==mi2){
           
				SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				JFileChooser fileChooser = new JFileChooser();
				fileChooser.setFileFilter(new FileNameExtensionFilter("Images", "jpg", "gif", "png"));
				fileChooser.showOpenDialog(null);
					try {
						File f = fileChooser.getSelectedFile();
						final BufferedImage image = ImageIO.read(f);
						if (image == null) throw new IllegalArgumentException(f + " no es una imagen valida.");
						final String ascii = new ASCII().convertir(image);
						final JTextArea textArea = new JTextArea(ascii, image.getHeight(), image.getWidth());
						textArea.setFont(new Font("Monospaced", Font.BOLD, 2));
                                                textArea.setEditable(false);
                                                
                                                
						final JOptionPane dialog = new JOptionPane();
                                                JOptionPane.showMessageDialog(dialog, "Imagen Convertida", "Aviso", JOptionPane.PLAIN_MESSAGE);
						dialog.setVisible(true);
                                                
                                               campo.setText(ascii);
                                               campo.setFont(new Font("Monospaced", Font.BOLD, 2));
                                               Icon icon = new ImageIcon(image);
                                             jLabel1.setIcon(icon);
                                             ImageIO.write(image, "png", new File("imagen.png"));
                                             BufferedImage img = new BufferedImage(campo.getWidth(), campo.getHeight(), BufferedImage.TYPE_INT_RGB);
                                             Graphics2D g2d = img.createGraphics();
                                             campo.printAll(g2d);
                                             g2d.dispose();

                                             try {
                                             ImageIO.write(img, "png", new File("imagenconvertida.png"));
                                             } catch (IOException ex) {
                                               ex.printStackTrace();
                                               }    
                                               
                                                
					} catch (Exception e) {
						JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
					}
                                        
				
				
			}
                                });
                                
        }
    }                                   

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        
    }                                    

    private void mi3ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
          if(evt.getSource()==mi3){
  File outputfile = new File("C:\\Users\\Zerhin\\Desktop\\Imagen_convertida"+num+".png");
 
 BufferedImage img = new BufferedImage(campo.getWidth(), campo.getHeight(), BufferedImage.TYPE_INT_RGB);
 Graphics2D g2d = img.createGraphics();
 campo.printAll(g2d);
 g2d.dispose();
                 
 final JOptionPane dia = new JOptionPane();
 JOptionPane.showMessageDialog(dia, "Guardado Exitoso", "Aviso", JOptionPane.PLAIN_MESSAGE);
 dia.setVisible(true);
 num++;

 try {
     ImageIO.write(img, "png",outputfile);
 } catch (IOException ex) {
    ex.printStackTrace();
 }    
}
    }                                   

    private void mi4ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        if(evt.getSource()==mi4){
               
                    
                
                
               
                 try {
                     File imagen = new File("imagenconvertida.png");
                      File f = new File("imagen.png");
                     fis = new FileInputStream(imagen);
                     fisb = new FileInputStream(f);
                     this.longitudbytes = (int)imagen.length();
                     this.longitudbytesb = (int)f.length();
                     PreparedStatement pps = cn.prepareStatement("INSERT INTO ASCII(Nombre,ID,Imagen,ASCII) VALUE (?,?,?,?)");
                     pps.setString(1, txtnombre.getText());
                     pps.setString(2, txtid.getText());
                     pps.setBlob(3, fisb, longitudbytesb);
                     pps.setBlob(4, fis, longitudbytes);
                     pps.executeUpdate();
                     JOptionPane.showMessageDialog(null, "datos guardados");
                     txtid.setText("");
                     txtnombre.setText("");
                }
                
                
                catch (HeadlessException t) {
                    JOptionPane.showMessageDialog(null, evt.toString(), "Error2", JOptionPane.ERROR_MESSAGE);
                
            } catch (FileNotFoundException t) {
                JOptionPane.showMessageDialog(null, evt.toString(), "Error3", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException t) {
                JOptionPane.showMessageDialog(null, evt.toString(), "Error4", JOptionPane.ERROR_MESSAGE);
            }
            
             
 }
    }                                   

    private void me1ActionPerformed(java.awt.event.ActionEvent evt) {                                    
         if(evt.getSource()==me1){
           
             if(tamaño>1&&tamaño<100){
                 tamaño ++;
                 campo.setFont(new Font("Monospaced", Font.BOLD, tamaño));
                 BufferedImage img = new BufferedImage(campo.getWidth(), campo.getHeight(), BufferedImage.TYPE_INT_RGB);
                 Graphics2D g2d = img.createGraphics();
                 campo.printAll(g2d);
                 g2d.dispose();

                 try {
                 ImageIO.write(img, "png", new File("imagenconvertida.png"));
                 } catch (IOException ex) {
                 ex.printStackTrace();
                 }    
             }
             else{
                 final JOptionPane dia = new JOptionPane();
                 JOptionPane.showMessageDialog(dia, "tamaño maximo excedido", "Aviso", JOptionPane.ERROR_MESSAGE);
                 dia.setVisible(true);
                 tamaño --;
             }
         }
    }                                   

    private void me2ActionPerformed(java.awt.event.ActionEvent evt) {                                    
      if(evt.getSource()==me2){
           
             if(tamaño>1&&tamaño<100){
                 tamaño --;
                 campo.setFont(new Font("Monospaced", Font.BOLD, tamaño));
                 BufferedImage img = new BufferedImage(campo.getWidth(), campo.getHeight(), BufferedImage.TYPE_INT_RGB);
                 Graphics2D g2d = img.createGraphics();
                 campo.printAll(g2d);
                 g2d.dispose();

                 try {
                 ImageIO.write(img, "png", new File("imagenconvertida.png"));
                 
                 } catch (IOException ex) {
                 ex.printStackTrace();
                 }    
                }
             else{
                 final JOptionPane dia = new JOptionPane();
                 JOptionPane.showMessageDialog(dia, "tamaño minimo excedido", "Aviso", JOptionPane.ERROR_MESSAGE);
                 dia.setVisible(true);
                 tamaño ++;
             }
         }
    }                                   

    private void me3ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        if(evt.getSource()==me3){
             campo.setFont(new Font("Monospaced", Font.BOLD, 2));
        }
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(visualchido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(visualchido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(visualchido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(visualchido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new visualchido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextArea campo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem me1;
    private javax.swing.JMenuItem me2;
    private javax.swing.JMenuItem me3;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuItem mi2;
    private javax.swing.JMenuItem mi3;
    private javax.swing.JButton mi4;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration                   
    private int longitudbytes;
     private int longitudbytesb;
    private FileInputStream fis;
    private FileInputStream fisb;
    private int tamaño = 2;
    private int num = 1;
    conex con = new conex();
    Connection cn = con.conexion();
}
